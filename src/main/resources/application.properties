server.port=8080

#jdbc配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.18.234:3307/test?serverTimezone=UTC&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=SqALPjm8splTPKZSBByl7RSDKpxwbzJkMvGy0KQsbTSB8LglmktD3hcaN6Sszvt2+lfGpRV3dixjEBB+BPjjWw==
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALL9NrB3jx+BeNUXy+Q6nGtFnpwaEXUcXYgbrVtstOltTY4U5udk4Ydtu+6BS+jsrDcvAdUfprZNE/NbIUlSUoUCAwEAAQ==
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#连接池的设置
#初始化时建立物理连接的个数
spring.datasource.druid.initialSize=5
#最小连接池数量
spring.datasource.druid.minIdle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.druid.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.testWhileIdle=true
# 配置一个连接在池中最小生存的时间，单位是毫秒 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.druid.minEvictableIdleTimeMillis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.datasource.druid.validationQuery=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.testOnBorrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.testOnReturn=false
#当数据库抛出不可恢复的异常时,抛弃该连接
#spring.datasource.druid.exceptio-sorter=true
#是否缓存preparedStatement,mysql5.5+建议开启
spring.datasource.druid.poolPreparedStatements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#配置扩展插件     配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500;;config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey}
#合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true
#设置访问druid监控页的账号和密码,默认没有
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

##########################  mybatis   ##########################
#mybatis.config-location: classpath:mybatis/mybatis-config.xml
#mybatis.mapper-locations: classpath:mybatis/mapper/*.xml
#扫描POJO目录
#mybatis.type-aliases-package:com.beijia.example.entity
#打印sql语句到控制台
#logging.level.com.priv.gabriel.demoformybatis.mapper=debug

#mybatis-plus
mybatis-plus.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis-plus.type-aliases-package=com.beijia.example.entity

#jpa设置
#spring.jpa.database=mysql
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#Redis设置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000